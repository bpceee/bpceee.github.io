1:HL["/_next/static/media/710e6adf42e8fe6f-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/media/7b379c56c483b024-s.p.woff2",{"as":"font","type":"font/woff2"}]
3:HL["/_next/static/media/7b9ca6a1d31c5662-s.p.woff2",{"as":"font","type":"font/woff2"}]
4:HL["/_next/static/media/931105f8d96e7f26-s.p.woff2",{"as":"font","type":"font/woff2"}]
5:HL["/_next/static/media/d9957a565b52891d-s.p.woff2",{"as":"font","type":"font/woff2"}]
6:HL["/_next/static/media/fbdbe464b9e5cc95-s.p.woff2",{"as":"font","type":"font/woff2"}]
7:HL["/_next/static/css/c69bbedb58cd7fba.css",{"as":"style"}]
0:["j227uTnhhy8X7UGOehirD",[[["",{"children":["posts",{"children":[["slug","2","d"],{"children":["__PAGE__?{\"slug\":\"2\"}",{}]}]}]},"$undefined","$undefined",true],"$L8",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c69bbedb58cd7fba.css","precedence":"next"}]],["$L9",["$","meta",null,{"name":"next-size-adjust"}]]]]]]
a:HL["/_next/static/media/1060bab20f18b5c2-s.p.woff2",{"as":"font","type":"font/woff2"}]
b:HL["/_next/static/css/ca4b413b104171a1.css",{"as":"style"}]
c:HL["/_next/static/css/2ec2d810ee62b2fc.css",{"as":"style"}]
d:I{"id":7095,"chunks":["95:static/chunks/95-072377135f6d2de2.js","333:static/chunks/app/posts/[slug]/page-9fb517f3f5b74a35.js"],"name":"","async":false}
e:I{"id":9180,"chunks":["272:static/chunks/webpack-3010b9fed0100c4b.js","253:static/chunks/bce60fc1-ace986fa93a43fca.js","698:static/chunks/698-2449c10902a17a12.js"],"name":"default","async":false}
f:I{"id":2306,"chunks":["272:static/chunks/webpack-3010b9fed0100c4b.js","253:static/chunks/bce60fc1-ace986fa93a43fca.js","698:static/chunks/698-2449c10902a17a12.js"],"name":"default","async":false}
8:[["$","html",null,{"lang":"en","children":["$","body",null,{"style":{"marginLeft":"auto","marginRight":"auto","maxWidth":"49rem","padding":"0px 1.3125rem"},"className":"__className_135483","children":[["$","nav",null,{"className":"Navbar_navbar__fk_p7","children":[["$","$Ld",null,{"href":"/","children":" Home "}],["$","$Ld",null,{"href":"/about","children":" About "}]]}],["$","main",null,{"className":"Layout_main__luTTh","children":["$","$Le",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lf",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$Le",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lf",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$Le",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children",["slug","2","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$Lf",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L10",null],"segment":"__PAGE__?{\"slug\":\"2\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ca4b413b104171a1.css","precedence":"next"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/2ec2d810ee62b2fc.css","precedence":"next"}]]}],"segment":["slug","2","d"]},"styles":[]}],"segment":"posts"},"styles":[]}]}],["$","footer",null,{"className":"Layout_footer__U3vTh","children":[["$","hr",null,{}],["$","small",null,{"children":["Â© ",2023," Ken Bi. Powered by"," ",["$","a",null,{"href":"https://github.com/bpceee/isblog","rel":"noopener noreferrer","target":"_blank","children":"isBlog"}]]}]]}]]}]}],null]
9:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Create Next App"}],["$","meta","2",{"name":"description","content":"Generated by create next app"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]]
12:I{"id":5282,"chunks":["95:static/chunks/95-072377135f6d2de2.js","333:static/chunks/app/posts/[slug]/page-9fb517f3f5b74a35.js"],"name":"Utterance","async":false}
11:T38c5,<html><head></head><body><p dir="auto">If you are using Atlassian's Stash at work, you must be annoyed by so many co-workers using the default avatar, which makes it so different to recognize different users. And you just couldn't ask them all to upload an avatar!</p>
<p dir="auto">So here I write a small <a href="https://tampermonkey.net/" rel="nofollow">tampermonkey</a> script to change the default avatar to their name initials.</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="const styleEl = document.createElement('style');
document.head.appendChild(styleEl);
styleEl.sheet.insertRule('.aui-avatar-inner { background-color: lightgray; color: white; font-weight: 700; line-height: 32px; }', 0);
styleEl.sheet.insertRule('.aui-avatar-small .aui-avatar-inner { line-height: 24px; }', 0);

const observer = new MutationObserver(function(mutations) {
    document.querySelectorAll('img[src^=&quot;https://secure.gravatar.com&quot;]').forEach((img) => {
        const parent = img.parentElement;
        const initials = img.alt.split(' ').map(s=>s[0]).join('');
        parent.textContent = initials;
    })
})
observer.observe(document, { childList: true, subtree: true });"><pre class="notranslate"><span class="pl-k">const</span> <span class="pl-s1">styleEl</span> <span class="pl-c1">=</span> <span class="pl-smi">document</span><span class="pl-kos">.</span><span class="pl-en">createElement</span><span class="pl-kos">(</span><span class="pl-s">'style'</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-smi">document</span><span class="pl-kos">.</span><span class="pl-c1">head</span><span class="pl-kos">.</span><span class="pl-en">appendChild</span><span class="pl-kos">(</span><span class="pl-s1">styleEl</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-s1">styleEl</span><span class="pl-kos">.</span><span class="pl-c1">sheet</span><span class="pl-kos">.</span><span class="pl-en">insertRule</span><span class="pl-kos">(</span><span class="pl-s">'.aui-avatar-inner { background-color: lightgray; color: white; font-weight: 700; line-height: 32px; }'</span><span class="pl-kos">,</span> <span class="pl-c1">0</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-s1">styleEl</span><span class="pl-kos">.</span><span class="pl-c1">sheet</span><span class="pl-kos">.</span><span class="pl-en">insertRule</span><span class="pl-kos">(</span><span class="pl-s">'.aui-avatar-small .aui-avatar-inner { line-height: 24px; }'</span><span class="pl-kos">,</span> <span class="pl-c1">0</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-k">const</span> <span class="pl-s1">observer</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">MutationObserver</span><span class="pl-kos">(</span><span class="pl-k">function</span><span class="pl-kos">(</span><span class="pl-s1">mutations</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-smi">document</span><span class="pl-kos">.</span><span class="pl-en">querySelectorAll</span><span class="pl-kos">(</span><span class="pl-s">'img[src^="https://secure.gravatar.com"]'</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">forEach</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-s1">img</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
        <span class="pl-k">const</span> <span class="pl-s1">parent</span> <span class="pl-c1">=</span> <span class="pl-s1">img</span><span class="pl-kos">.</span><span class="pl-c1">parentElement</span><span class="pl-kos">;</span>
        <span class="pl-k">const</span> <span class="pl-s1">initials</span> <span class="pl-c1">=</span> <span class="pl-s1">img</span><span class="pl-kos">.</span><span class="pl-c1">alt</span><span class="pl-kos">.</span><span class="pl-en">split</span><span class="pl-kos">(</span><span class="pl-s">' '</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">map</span><span class="pl-kos">(</span><span class="pl-s1">s</span><span class="pl-c1">=&gt;</span><span class="pl-s1">s</span><span class="pl-kos">[</span><span class="pl-c1">0</span><span class="pl-kos">]</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">join</span><span class="pl-kos">(</span><span class="pl-s">''</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
        <span class="pl-s1">parent</span><span class="pl-kos">.</span><span class="pl-c1">textContent</span> <span class="pl-c1">=</span> <span class="pl-s1">initials</span><span class="pl-kos">;</span>
    <span class="pl-kos">}</span><span class="pl-kos">)</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span>
<span class="pl-s1">observer</span><span class="pl-kos">.</span><span class="pl-en">observe</span><span class="pl-kos">(</span><span class="pl-smi">document</span><span class="pl-kos">,</span> <span class="pl-kos">{</span> <span class="pl-c1">childList</span>: <span class="pl-c1">true</span><span class="pl-kos">,</span> <span class="pl-c1">subtree</span>: <span class="pl-c1">true</span> <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
<p dir="auto">Before:<br>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/4188573/48832106-5ffac900-edb3-11e8-965f-b8236c82f504.png"><img src="https://user-images.githubusercontent.com/4188573/48832106-5ffac900-edb3-11e8-965f-b8236c82f504.png" alt="image" style="max-width: 100%;"></a><br>
After:<br>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/4188573/48832143-7012a880-edb3-11e8-9c59-1b13a7b54bc2.png"><img src="https://user-images.githubusercontent.com/4188573/48832143-7012a880-edb3-11e8-9c59-1b13a7b54bc2.png" alt="image" style="max-width: 100%;"></a></p>
<p dir="auto">Surely it would be much better if we could just use css without javascript. However,  <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:has" rel="nofollow"><code class="notranslate">:has()</code></a> pseudo-class is still can not be used within stylesheets but only with functions like document.querySelector().</p>
<p dir="auto">And the <code class="notranslate">MutationObserver</code> used here is much faster than the conventional <code class="notranslate">DOMNodeInserted</code> event. Just a reminder, in real life, a proper debounce to the callback is much appropriate here!</p>
<hr>
<p dir="auto">Update:</p>
<p dir="auto">Just saw a brilliant way to detect DOM Node Insertion without using MutationObserver: <a href="https://davidwalsh.name/detect-node-insertion" rel="nofollow">Detect DOM Node Insertions with JavaScript and CSS Animations</a>. So I updated the script as this:</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="let insertionObserver = function(selector, callback) {
  const styleEl = document.createElement('style');
  document.head.appendChild(styleEl);
  const KeyframeName = 'insertionObserver';
  const keyframesRule = `@keyframes ${KeyframeName} { from { opacity: 0.99; } to { opacity: 1; } }`;
  const styleRule = `${selector} { animation-duration: 0.001s; animation-name: ${KeyframeName}; }`;

  styleEl.sheet.insertRule(keyframesRule);
  styleEl.sheet.insertRule(styleRule);

  document.addEventListener('animationstart', (event) => {
    if (event.animationName === KeyframeName) {
      callback(event);
    }
  }, false);
}

insertionObserver('.aui-avatar-inner img[src^=&quot;https://secure.gravatar.com&quot;]', (event) => {
  let img = event.target;
  const parent = img.parentElement;
  const initials = img.alt.split(' ').map(s=>s[0]).join('');
  const height = getComputedStyle(parent).height;
  parent.setAttribute(&quot;style&quot;, `background-color: lightgray; color: white; line-height: ${height}`);
  parent.textContent = initials;
});"><pre class="notranslate"><span class="pl-k">let</span> <span class="pl-en">insertionObserver</span> <span class="pl-c1">=</span> <span class="pl-k">function</span><span class="pl-kos">(</span><span class="pl-s1">selector</span><span class="pl-kos">,</span> <span class="pl-s1">callback</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-k">const</span> <span class="pl-s1">styleEl</span> <span class="pl-c1">=</span> <span class="pl-smi">document</span><span class="pl-kos">.</span><span class="pl-en">createElement</span><span class="pl-kos">(</span><span class="pl-s">'style'</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-smi">document</span><span class="pl-kos">.</span><span class="pl-c1">head</span><span class="pl-kos">.</span><span class="pl-en">appendChild</span><span class="pl-kos">(</span><span class="pl-s1">styleEl</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-k">const</span> <span class="pl-v">KeyframeName</span> <span class="pl-c1">=</span> <span class="pl-s">'insertionObserver'</span><span class="pl-kos">;</span>
  <span class="pl-k">const</span> <span class="pl-s1">keyframesRule</span> <span class="pl-c1">=</span> <span class="pl-s">`@keyframes <span class="pl-s1"><span class="pl-kos">${</span><span class="pl-v">KeyframeName</span><span class="pl-kos">}</span></span> { from { opacity: 0.99; } to { opacity: 1; } }`</span><span class="pl-kos">;</span>
  <span class="pl-k">const</span> <span class="pl-s1">styleRule</span> <span class="pl-c1">=</span> <span class="pl-s">`<span class="pl-s1"><span class="pl-kos">${</span><span class="pl-s1">selector</span><span class="pl-kos">}</span></span> { animation-duration: 0.001s; animation-name: <span class="pl-s1"><span class="pl-kos">${</span><span class="pl-v">KeyframeName</span><span class="pl-kos">}</span></span>; }`</span><span class="pl-kos">;</span>

  <span class="pl-s1">styleEl</span><span class="pl-kos">.</span><span class="pl-c1">sheet</span><span class="pl-kos">.</span><span class="pl-en">insertRule</span><span class="pl-kos">(</span><span class="pl-s1">keyframesRule</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-s1">styleEl</span><span class="pl-kos">.</span><span class="pl-c1">sheet</span><span class="pl-kos">.</span><span class="pl-en">insertRule</span><span class="pl-kos">(</span><span class="pl-s1">styleRule</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

  <span class="pl-smi">document</span><span class="pl-kos">.</span><span class="pl-en">addEventListener</span><span class="pl-kos">(</span><span class="pl-s">'animationstart'</span><span class="pl-kos">,</span> <span class="pl-kos">(</span><span class="pl-s1">event</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
    <span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-s1">event</span><span class="pl-kos">.</span><span class="pl-c1">animationName</span> <span class="pl-c1">===</span> <span class="pl-v">KeyframeName</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
      <span class="pl-s1">callback</span><span class="pl-kos">(</span><span class="pl-s1">event</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
    <span class="pl-kos">}</span>
  <span class="pl-kos">}</span><span class="pl-kos">,</span> <span class="pl-c1">false</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span>

<span class="pl-en">insertionObserver</span><span class="pl-kos">(</span><span class="pl-s">'.aui-avatar-inner img[src^="https://secure.gravatar.com"]'</span><span class="pl-kos">,</span> <span class="pl-kos">(</span><span class="pl-s1">event</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
  <span class="pl-k">let</span> <span class="pl-s1">img</span> <span class="pl-c1">=</span> <span class="pl-s1">event</span><span class="pl-kos">.</span><span class="pl-c1">target</span><span class="pl-kos">;</span>
  <span class="pl-k">const</span> <span class="pl-s1">parent</span> <span class="pl-c1">=</span> <span class="pl-s1">img</span><span class="pl-kos">.</span><span class="pl-c1">parentElement</span><span class="pl-kos">;</span>
  <span class="pl-k">const</span> <span class="pl-s1">initials</span> <span class="pl-c1">=</span> <span class="pl-s1">img</span><span class="pl-kos">.</span><span class="pl-c1">alt</span><span class="pl-kos">.</span><span class="pl-en">split</span><span class="pl-kos">(</span><span class="pl-s">' '</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">map</span><span class="pl-kos">(</span><span class="pl-s1">s</span><span class="pl-c1">=&gt;</span><span class="pl-s1">s</span><span class="pl-kos">[</span><span class="pl-c1">0</span><span class="pl-kos">]</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">join</span><span class="pl-kos">(</span><span class="pl-s">''</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-k">const</span> <span class="pl-s1">height</span> <span class="pl-c1">=</span> <span class="pl-en">getComputedStyle</span><span class="pl-kos">(</span><span class="pl-s1">parent</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-c1">height</span><span class="pl-kos">;</span>
  <span class="pl-s1">parent</span><span class="pl-kos">.</span><span class="pl-en">setAttribute</span><span class="pl-kos">(</span><span class="pl-s">"style"</span><span class="pl-kos">,</span> <span class="pl-s">`background-color: lightgray; color: white; line-height: <span class="pl-s1"><span class="pl-kos">${</span><span class="pl-s1">height</span><span class="pl-kos">}</span></span>`</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-s1">parent</span><span class="pl-kos">.</span><span class="pl-c1">textContent</span> <span class="pl-c1">=</span> <span class="pl-s1">initials</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
<p dir="auto">Maybe it's time to create a repo to for these little helper functions, as my arsenal..</p></body></html>10:["$","article",null,{"className":"Post_blogPost__gpu0n","children":[["$","header",null,{"children":[["$","h1",null,{"className":"__className_cabfd8","children":"Change Stash's default avatar to username initials"}],["$","p",null,{"className":"Post_meta__oz6mK","children":["Published ",["$","span",null,{"children":"21 Nov 2018"}],[" ","Â· tagged with",[[" ",["$","$Ld","0",{"className":"PostTags_tag__ommYO","href":"?tag=tampermonkey","children":"tampermonkey"}]]]]]}]]}],["$","div",null,{"className":"markdown-body","dangerouslySetInnerHTML":{"__html":"$11"}}],["$","$L12",null,{"postId":2}]]}]
